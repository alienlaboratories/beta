#
# Node Express App server.
#

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: alien-worker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        run: alien-worker
    spec:
      containers:
      - name: alien-worker
        # NOTE: Don't use the :latest tag in production.
        # https://console.aws.amazon.com/ecs/home?region=us-east-1#/repositories
        # http://kubernetes.io/docs/concepts/containers/images/#updating-images
        # http://kubernetes.io/docs/user-guide/config-best-practices/#container-images
        image: 956243632840.dkr.ecr.us-east-1.amazonaws.com/alien-worker:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9000

      # AWS ECR secret.
      # https://github.com/kubernetes/minikube#private-container-registries
      imagePullSecrets:
      - name: awsecr-cred

---

apiVersion: v1
kind: Service
metadata:
  name: alien-worker
  labels:
    run: alien-worker
spec:
  # Important for minikube service to be exposed directly.
  type: NodePort
  selector:
    run: alien-worker
  ports:
  - port: 80
    targetPort: 9000

# TODO(burdon): Connect to REDIS via DNS. (k get deployments); check cluser add-on and document.
# Service def at top of config
# https://kubernetes.io/docs/concepts/services-networking/service/#dns (redis)
# https://github.com/kubernetes/kubernetes/tree/master/examples/guestbook#dns-service
# k get service redis
# proxy to test (or call driectly from CLI)
# https://kubernetes.io/docs/tasks/access-application-cluster/connecting-frontend-backend/#creating-the-backend-using-a-deployment
